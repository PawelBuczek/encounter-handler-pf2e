# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      DB_DATABASE: pf
      DB_USER: root
      DB_PASSWORD: root
    steps:
      - name: Start MariaDB
        uses: getong/mariadb-action@v1.1
        with:
          host port: 3306
          container port: 3306
          character set server: 'utf8'
          collation server: 'utf8_general_ci'
          mariadb version: 'latest'
          mysql database: 'pf'
          mysql root password: root # can also be: ${{ secrets.RootPassword }}
          mysql user: 'root'
          # mysql password: ${{ secrets.DatabasePassword }} # Required only if "mysql user" exists.
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests
      - name: Run unit tests
        run: mvn -Dtest=com/pbuczek/pf/UnitTests.java test

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
